//A design pattern which restricts the creation of an object to just 1 per jvm
public class Singleton {
	
	private static volatile Singleton singleton;
	
	private Singleton() {}
	
	public static Singleton getInstance() {
		
		if(singleton==null) {
			synchronized (Singleton.class) {
				if(singleton==null)
					singleton = new Singleton();
			}
		}
		return singleton;
	}
}
